CREATE TABLE CENTERS (CENTER_ID VARCHAR2(5) PRIMARY KEY,
                                        NAME VARCHAR2(50) NOT NULL,
                                        PHONE_NUMBER NUMBER(11) NOT NULL,
                                        CITY VARCHAR2(50) NOT NULL,
                                        STATE VARCHAR2(50) NOT NULL,
                                        STREET VARCHAR2(50) NOT NULL,
							   ZIPCODE NUMBER(5) NOT NULL);


CREATE TABLE MANAGERS(EMPLOYEE_ID NUMBER(9) PRIMARY KEY,
                    NAME VARCHAR2(50) NOT NULL,
			    PHONE_NUMBER NUMBER(10) NOT NULL,
                    CITY VARCHAR2(50) NOT NULL,
                    STATE VARCHAR2(50) NOT NULL,
                    STREET VARCHAR2(50) NOT NULL,
                    ZIPCODE NUMBER(5) NOT NULL,
                    EMAIL VARCHAR2(25) NOT NULL,
                    SALARY FLOAT NOT NULL,
			    PASSWORD VARCHAR2(30) NOT NULL,
                    CENTER_ID VARCHAR2(5),
                    FOREIGN KEY(CENTER_ID)
                   REFERENCES CENTERS (CENTER_ID)
ON DELETE CASCADE);

CREATE TABLE RECEPTIONISTS(EMPLOYEE_ID NUMBER(9) PRIMARY KEY,
                    NAME VARCHAR2(50) NOT NULL,
			    PHONE_NUMBER NUMBER(10) NOT NULL,
                    CITY VARCHAR2(50) NOT NULL,
                    STATE VARCHAR2(50) NOT NULL,
                    STREET VARCHAR2(50) NOT NULL,
			    ZIPCODE NUMBER(5) NOT NULL,
                    EMAIL VARCHAR(25) NOT NULL,
                    SALARY FLOAT NOT NULL,
			    PASSWORD VARCHAR2(30) NOT NULL,
                    CENTER_ID VARCHAR2(5),
                    FOREIGN KEY(CENTER_ID)
                   REFERENCES CENTERS (CENTER_ID) ON DELETE CASCADE);

CREATE TABLE MECHANICS(EMPLOYEE_ID NUMBER(9) PRIMARY KEY,
                    NAME VARCHAR2(50) NOT NULL,
			    PHONE_NUMBER NUMBER(10) NOT NULL,
                    CITY VARCHAR2(50) NOT NULL,
                    STATE VARCHAR2(50) NOT NULL,
                    STREET VARCHAR2(50) NOT NULL,
			    ZIPCODE NUMBER(5) NOT NULL,	
                    EMAIL VARCHAR(25) NOT NULL,
                    HOURLY_RATE FLOAT NOT NULL,
                HOURS_WORKED FLOAT,
			    PASSWORD VARCHAR2(30) NOT NULL,
                    CENTER_ID VARCHAR2(5),
                    FOREIGN KEY(CENTER_ID)
                   REFERENCES CENTERS (CENTER_ID) ON DELETE CASCADE);


CREATE TABLE PAYROLL(PAYROLL_ID NUMBER (10) PRIMARY KEY,
                SALARY_TYPE FLOAT NOT NULL,
                SALARY_FREQUENCY VARCHAR2(25) NOT NULL,
                START_DATE DATE NOT NULL,
                DATE_PAID DATE NOT NULL,
                WAGES FLOAT NOT NULL,
                MANAGER_ID NUMBER(9), 
                RECEPTIONIST_ID NUMBER(9),
                MECHANIC_ID NUMBER(9),
FOREIGN KEY(MANAGER_ID) REFERENCES MANAGERS(EMPLOYEE_ID) ON DELETE CASCADE,
                FOREIGN KEY(RECEPTIONIST_ID) REFERENCES RECEPTIONISTS(EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY(MECHANIC_ID) REFERENCES MECHANICS(EMPLOYEE_ID) ON DELETE CASCADE);


CREATE TABLE PARTS(PART_ID INT PRIMARY KEY,
                 NAME VARCHAR2(30) NOT NULL,
                 CURRENT_QUANTITY INT NOT NULL,
                                        UNIT_PRICE FLOAT NOT NULL,
                 MIN_QUANTITY_THRESHOLD INT NOT NULL,
                 MIN_ORDER_THRESHOLD INT NOT NULL,
			 WARRANTY INT NOT NULL,
			 DELIVERY_WINDOW INT,
                 CENTER_ID VARCHAR2(5) NOT NULL,
                 FOREIGN KEY(CENTER_ID) REFERENCES CENTERS(CENTER_ID) ON DELETE CASCADE);


CREATE TABLE BASIC_SERVICES (BASIC_SERVICE_ID INT PRIMARY KEY,
                 NAME VARCHAR2(50) NOT NULL,
                 HOURS_TO_COMPLETE FLOAT NOT NULL,
                 COST_TYPE VARCHAR2(50) NOT NULL,
                 LABOUR_COST FLOAT NOT NULL,
                 TOTAL_COST FLOAT NOT NULL,
                 PARTS_ID INT NOT NULL,
                CONSTRAINT P_ID FOREIGN KEY(PARTS_ID) REFERENCES PARTS(PART_ID));


CREATE TABLE MANUAL(MANUAL_ID INT PRIMARY KEY,
                SERVICE_TYPE VARCHAR2(25) NOT NULL,
                MANUFACTURER VARCHAR2(50) NOT NULL CHECK ( MANUFACTURER='HONDA' OR MANUFACTURER='NISSAN' OR MANUFACTURER='TOYOTA'),
                MODEL VARCHAR2(50) NOT NULL,
                YEAR INT NOT NULL,
                BASIC_SERVICE_ID INT NOT NULL,
			PART_ID INT NOT NULL,
FOREIGN KEY(BASIC_SERVICE_ID) REFERENCES BASIC_SERVICES (BASIC_SERVICE_ID) ON DELETE CASCADE,
FOREIGN KEY(PART_ID) REFERENCES PARTS(PART_ID) ON DELETE CASCADE );


CREATE TABLE MAINTENANCE_SERVICE(SERVICE_ID INT PRIMARY KEY,
                        STATUS VARCHAR2(20) NOT NULL,
                        PERFORMING_MECHANIC VARCHAR2(50) NOT NULL,
                        TOTAL_COST FLOAT NOT NULL,
                        TOTAL_HRS_REQD FLOAT NOT NULL,
                        MAINTENANCE_SERVICE_TYPE CHAR(1) NOT NULL CHECK ( MAINTENANCE_SERVICE_TYPE='A' OR MAINTENANCE_SERVICE_TYPE='B' OR MAINTENANCE_SERVICE_TYPE='C'),
            BASIC_SERVICE_ID INT,
 FOREIGN KEY(BASIC_SERVICE_ID) REFERENCES BASIC_SERVICES (BASIC_SERVICE_ID));


CREATE TABLE REPAIR_SERVICE(SERVICE_ID INT PRIMARY KEY,
                        STATUS VARCHAR2(20) NOT NULL,
                        PERFORMING_MECHANIC VARCHAR2(50),
                        TOTAL_COST FLOAT NOT NULL,
                        TOTAL_HRS_REQD FLOAT NOT NULL,
                        SPECIFIC_PROBLEM VARCHAR2(50) NOT NULL,
DIAGNOSTIC_FEE FLOAT NOT NULL,
                        BASIC_SERVICE_ID INT,
                         FOREIGN KEY(BASIC_SERVICE_ID) REFERENCES BASIC_SERVICES(BASIC_SERVICE_ID));



CREATE  TABLE MAINTENANCE_INVOICE(MAINTENANCE_SERVICE_ID INT NOT NULL,
                DATE_OF_SERVICE DATE NOT NULL,
                PRIMARY KEY(MAINTENANCE_SERVICE_ID,DATE_OF_SERVICE) ,
FOREIGN KEY(MAINTENANCE_SERVICE_ID) REFERENCES MAINTENANCE_SERVICE(SERVICE_ID) ON DELETE CASCADE);


CREATE  TABLE REPAIR_INVOICE(REPAIR_SERVICE_ID INT NOT NULL,
                DATE_OF_SERVICE DATE NOT NULL,
                PRIMARY KEY(REPAIR_SERVICE_ID,DATE_OF_SERVICE),
FOREIGN KEY(REPAIR_SERVICE_ID) REFERENCES REPAIR_SERVICE(SERVICE_ID) ON DELETE CASCADE);


CREATE TABLE CUSTOMERS(CUSTOMER_ID NUMBER(4) PRIMARY KEY,
EMAIL VARCHAR2(50) UNIQUE,
PASSWORD VARCHAR2(30) NOT NULL,
NAME VARCHAR2(50) NOT NULL,
PHONE_NUMBER NUMBER(10) NOT NULL,
CITY VARCHAR2(50) NOT NULL,
STATE VARCHAR2(50) NOT NULL,
STREET VARCHAR2(50) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL);

CREATE TABLE VEHICLES(CUSTOMER_ID NUMBER(4) NOT NULL,
LICENCE_PLATE_NO VARCHAR2(50),
MANUFACTURER VARCHAR2(50) NOT NULL CHECK ( MANUFACTURER='HONDA' OR MANUFACTURER='NISSAN' OR MANUFACTURER='TOYOTA'),
MODEL VARCHAR2(50) NOT NULL,
YEAR NUMBER(4) NOT NULL,
DATE_OF_PURCHASE DATE NOT NULL,
DATE_OF_MAINTENANCE_SERVICE DATE NOT NULL,
MILEAGE_OF_LAST_SERVICE INT NOT NULL,
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE,
PRIMARY KEY(CUSTOMER_ID,LICENCE_PLATE_NO));


CREATE TABLE SCHEDULER(SCHEDULER_DATE DATE ,
                    SLOT_NUMBER INT,
                     TIME_DURATION VARCHAR2(50),
PRIMARY KEY(SCHEDULER_DATE, SLOT_NUMBER, TIME_DURATION),
CUSTOMER_ID NUMBER(4),
MAINTENANCE_SERVICE_ID INT ,
REPAIR_SERVICE_ID INT,
CENTER_ID VARCHAR2(5) ,
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
FOREIGN KEY(MAINTENANCE_SERVICE_ID) REFERENCES MAINTENANCE_SERVICE(SERVICE_ID),
FOREIGN KEY(REPAIR_SERVICE_ID) REFERENCES REPAIR_SERVICE(SERVICE_ID),
FOREIGN KEY(CENTER_ID) REFERENCES CENTERS(CENTER_ID));


CREATE TABLE APPOINTMENT_RESPONSE(APPOINTMENT_ID INT PRIMARY KEY,
                         AVAILABLE_TIME_SLOT1 TIMESTAMP NOT NULL,
AVAILABLE_TIME_SLOT2 TIMESTAMP NOT NULL,
SCHEDULED_DATE DATE,
SCHEDULED_TIME_SLOT INT ,
SCHEDULED_TIME_DURATION VARCHAR2(50) ,
CUSTOMER_ID NUMBER(4) ,
FOREIGN KEY(SCHEDULED_DATE,SCHEDULED_TIME_SLOT,SCHEDULED_TIME_DURATION) REFERENCES SCHEDULER(SCHEDULER_DATE, SLOT_NUMBER, TIME_DURATION),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID));



CREATE TABLE ORDERS(ORDER_ID INT PRIMARY KEY,
                ORDER_STATUS VARCHAR2(25) NOT NULL,
                ORDER_DATE DATE NOT NULL,
                EXPECTED_DELIVERY_DATE DATE NOT NULL,
                QUANTITY INT NOT NULL,
EMPLOYEE_ID NUMBER(9),
PART_ID INT,
FOREIGN KEY(EMPLOYEE_ID) REFERENCES MANAGERS(EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY(PART_ID) REFERENCES PARTS(PART_ID) ON DELETE CASCADE);


CREATE TABLE NOTIFICATIONS(NOTIFICATION_ID INT PRIMARY KEY,
DATE_OF_NOTIFICATION DATE NOT NULL,
TEXT VARCHAR2(100) NOT NULL,
RECEPTIONIST_ID NUMBER(9),
MANAGER_ID NUMBER(9),
FOREIGN KEY(RECEPTIONIST_ID) REFERENCES RECEPTIONISTS(EMPLOYEE_ID),
FOREIGN KEY(MANAGER_ID) REFERENCES MANAGERS(EMPLOYEE_ID));

CREATE TABLE DISTRIBUTORS(
            DISTRIBUTOR_ID VARCHAR2(5) PRIMARY KEY,
		 NAME VARCHAR2(30) NOT NULL,
ORDER_ID INT,
FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID));


CREATE TABLE LOGIN(LOGIN_TOKEN VARCHAR2(50) PRIMARY KEY,
LOGIN_TIMESTAMP TIMESTAMP  NOT NULL,
LOGOUT_TIMESTAMP TIMESTAMP NOT NULL,
CUSTOMER_ID NUMBER(4),
MANAGER_ID INT ,
RECEPTIONIST_ID INT ,
MECHANIC_ID INT ,
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
FOREIGN KEY(MANAGER_ID) REFERENCES MANAGERS(EMPLOYEE_ID),
FOREIGN KEY(RECEPTIONIST_ID) REFERENCES RECEPTIONISTS(EMPLOYEE_ID),
FOREIGN KEY(MECHANIC_ID) REFERENCES MECHANICS(EMPLOYEE_ID));


CREATE TABLE FULFILLS(DISTRIBUTOR_ID VARCHAR2(5),
                ORDER_ID INT,
                ACTUAL_DELIVERY_DATE DATE NOT NULL,
                PRIMARY KEY(DISTRIBUTOR_ID ,ORDER_ID),
                FOREIGN KEY(DISTRIBUTOR_ID) REFERENCES DISTRIBUTORS(DISTRIBUTOR_ID) ON DELETE CASCADE,
FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE);




CREATE TABLE ACCEPTS(CUSTOMER_ID NUMBER(4),
                SCHEDULER_DATE DATE ,
                SLOT_NUMBER INT,
                             TIME_DURATION VARCHAR2(50),
                APPOINTMENT_ID,
ACCEPTED_TIME_SLOT TIMESTAMP NOT NULL,
PRIMARY KEY( CUSTOMER_ID,SCHEDULER_DATE,SLOT_NUMBER,TIME_DURATION,APPOINTMENT_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE,
FOREIGN KEY(SCHEDULER_DATE, SLOT_NUMBER, TIME_DURATION) REFERENCES SCHEDULER(SCHEDULER_DATE,SLOT_NUMBER,TIME_DURATION) ON DELETE CASCADE,
FOREIGN KEY(APPOINTMENT_ID) REFERENCES APPOINTMENT_RESPONSE(APPOINTMENT_ID) ON DELETE CASCADE);


CREATE TABLE SCHEDULES(CUSTOMER_ID NUMBER(4),
                SCHEDULER_DATE DATE,
                SLOT_NUMBER INT,
                             TIME_DURATION VARCHAR2(50),
                CURRENT_MILEAGE NUMBER(10) NOT NULL,
                PREFERRED_MECHANIC VARCHAR2(30) NOT NULL,
                PRIMARY KEY( CUSTOMER_ID,SCHEDULER_DATE,SLOT_NUMBER,TIME_DURATION),
                FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE,
FOREIGN KEY(SCHEDULER_DATE, SLOT_NUMBER, TIME_DURATION) REFERENCES SCHEDULER(SCHEDULER_DATE,SLOT_NUMBER,TIME_DURATION) ON DELETE CASCADE);

